@model System.Collections.Generic.IEnumerable<iConnect.Server.ViewModels.UserViewModel>

@{
    ViewBag.Title = "Chat Service";
    Layout = "~/Views/Shared/_HeaderLayout.cshtml";
}


<style type="text/css">
    .state-icon {
        left: -5px;
    }

    .list-group-item-primary {
        color: rgb(255, 255, 255);
        background-color: rgb(66, 139, 202);
    }

    /* DEMO ONLY - REMOVES UNWANTED MARGIN */
    .well .list-group {
        margin-bottom: 0px;
    }
</style>

<div class="col-lg-3">
    <ul class="nav nav-tabs">
        <li class="active"><a href="#allUsers" data-toggle="tab" aria-expanded="false">All Users</a></li>
        <li><a href="#groups" data-toggle="tab" aria-expanded="true">Groups</a></li>
    </ul>

    <div id="myTabContent" class="tab-content">
        <div class="tab-pane fade active in" id="allUsers">
            <div class="list-group">
                @foreach (var item in Model)
                {
                    var status = @item.IsOnline == true ? "Online" : "";
                    var statusCssClass = @item.IsOnline == true ? "label label-success" : "";

                    <a href="#" class="list-group-item user-list-item" data-user="@item.UserName">
                        <span class="glyphicon glyphicon-user"></span> <span id="userAlias">@item.Alias</span>
                        <span class="@statusCssClass" data-user="@item.UserName" style="float:right">@Html.DisplayFor(modelItem => status)</span>
                    </a>
                }
            </div>
        </div>
        <div class="tab-pane fade in" id="groups">
            <div style="border-bottom:1px dotted white;width:263px;height:30px;padding-left:246px;padding-top:4px;">
                <a href=# data-toggle="modal" data-target="#addMember" aria-hidden="true">
                    <span class="glyphicon glyphicon-plus-sign"></span>
                </a>
            </div>

            <div class="list-group" id="groupList" style="margin-top:4px;">
            </div>
        </div>
    </div>


</div>

<div class="col-lg-8" id="chat-area">
    <div class="chatWithText"></div>

    <div class="row chat-box">
        <div class="col-lg-12">
            <div class="panel panel-default">
                <div class="panel-body">
                    @*<div data-user="" id="chat-with" class="col-lg-12">
                            <h4 class="text-success">Chat with <strong id="chat-user"></strong></h4>
                        </div>*@
                    <div class="row chat-area">
                        <div class="col-lg-12">
                            <ul id="ulChatMessages"></ul>
                        </div>



                    </div>
                    <div class="row chat-buttons">
                        <div class="col-lg-12">
                            <div class="form-group">
                                <div class="input-group">
                                    <input type="text" id="txtPrivateMessage" class="form-control">
                                    <span class="input-group-btn">
                                        <button class="btn btn-default" id="btnSubmit" type="submit" onclick="chatServer.sendPrivate($('#chat-user').attr('data-user'))">Submit</button>
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal" id="broadcast" tabindex="-1" role="dialog" aria-labelledby="broadcastTitle" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                <h4 class="modal-title" id="broadcastTitle">Broadcast Message</h4>
            </div>
            <div class="modal-body">
                <label for="txtMessage" class="control-label">Message</label>
                <input type="text" id="txtMessage" class="form-control">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button class="btn btn-primary" type="submit" onclick="chatServer.broadcast($('#txtMessage').val());">Submit</button>
            </div>
        </div>
    </div>
</div>

@*<div class="modal" tabindex="-1" id="addMember" aria-hidden="true" role="dialog">
    <h3 class="text-center">Select Members</h3>
    <div class="well" style="max-height: 300px;overflow: auto;">
        <ul id="check-list-box" class="list-group checked-list-box">
            @foreach (var item in Model)
            {
                <li class="list-group-item">@item.Alias (@item.UserName)</li>
            }
        </ul>
        <br />
        <button class="btn btn-primary col-xs-12" id="get-checked-data">Get Checked Data</button>
    </div>
    <pre id="display-json"></pre>
</div>*@


<div class="modal" id="addMember" tabindex="-1" role="dialog" aria-labelledby="groupModelTitle" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                <h4 class="modal-title" id="groupModelTitle">Manage Group</h4>
            </div>
            <div class="modal-body">
                <ul id="check-list-box" class="list-group checked-list-box">
                    @foreach (var item in Model)
                    {
                        <li class="list-group-item">@item.Alias (@item.UserName)</li>
                    }
                </ul>
            </div>
            <div class="modal-footer">
                <button class="btn btn-primary col-xs-12" id="get-checked-data">Get Checked Data</button>
                <pre id="display-json"></pre>
            </div>
        </div>
    </div>
</div>


@section scripts
{
    @Scripts.Render("~/bundles/chatHub")
    <script src="~/Scripts/noty/themes/relax.js"></script>
    <script type="text/javascript">
        $(function () {
            loggedInUser = '@User.Identity.Name';

            chatServer.connectToServer(loggedInUser);
            $('#txtMessage').focus();

            $('#txtMessage').keyup(function (e) {
                if (e.which == 13) {
                    chatServer.sendMessage();
                }
            });

            function closeBroadcastDialog() {

            }

            $(".user-list-item").click(function () {
                $("#chat-user").remove();
                $("#chat-area").prepend('<span class="label label-success" id="chat-user"></span>');
                var user = $(this).attr("data-user");
                $("#chat-user").attr("data-user", user);
                var alias = $(this).text();
                alias = alias.replace("Online", "");
                $(".chatWithText").html("<span class='label label-success' style='background-color:#2B97EA!important;'>Chatting with " + alias + "</span>");
            });

            //To display 'Welcome Alias' text on top of the Chat page
            $("#userAlias").html($(".list-group-item").find('[data-user="' + loggedInUser + '"]').prev().text());

        });

        function CreateGroup() {
            var groupName = prompt('Enter Group Name');

            if (groupName != null || groupName != undefined) {
                var newHtml = '<a href="#" class="list-group-item user-list-item">';
                newHtml += '<span class="glyphicon glyphicon-user"></span> <span>' + groupName + '</span></a>';

                $('#groupList').append(newHtml);
            }


        }


        $(function () {
            $('.list-group.checked-list-box .list-group-item').each(function () {

                // Settings
                var $widget = $(this),
                    $checkbox = $('<input type="checkbox" class="hidden" />'),
                    color = ($widget.data('color') ? $widget.data('color') : "primary"),
                    style = ($widget.data('style') == "button" ? "btn-" : "list-group-item-"),
                    settings = {
                        on: {
                            icon: 'glyphicon glyphicon-check'
                        },
                        off: {
                            icon: 'glyphicon glyphicon-unchecked'
                        }
                    };

                $widget.css('cursor', 'pointer')
                $widget.append($checkbox);

                // Event Handlers
                $widget.on('click', function () {
                    $checkbox.prop('checked', !$checkbox.is(':checked'));
                    $checkbox.triggerHandler('change');
                    updateDisplay();
                });
                $checkbox.on('change', function () {
                    updateDisplay();
                });


                // Actions
                function updateDisplay() {
                    var isChecked = $checkbox.is(':checked');

                    // Set the button's state
                    $widget.data('state', (isChecked) ? "on" : "off");

                    // Set the button's icon
                    $widget.find('.state-icon')
                        .removeClass()
                        .addClass('state-icon ' + settings[$widget.data('state')].icon);

                    // Update the button's color
                    if (isChecked) {
                        $widget.addClass(style + color + ' active');
                    } else {
                        $widget.removeClass(style + color + ' active');
                    }
                }

                // Initialization
                function init() {

                    if ($widget.data('checked') == true) {
                        $checkbox.prop('checked', !$checkbox.is(':checked'));
                    }

                    updateDisplay();

                    // Inject the icon if applicable
                    if ($widget.find('.state-icon').length == 0) {
                        $widget.prepend('<span class="state-icon ' + settings[$widget.data('state')].icon + '"></span>');
                    }
                }
                init();
            });

            $('#get-checked-data').on('click', function (event) {
                event.preventDefault();
                var checkedItems = {}, counter = 0;
                $("#check-list-box li.active").each(function (idx, li) {
                    checkedItems[counter] = $(li).text();
                    counter++;
                });
                $('#display-json').html(JSON.stringify(checkedItems, null, '\t'));
            });
        });

    </script>
}