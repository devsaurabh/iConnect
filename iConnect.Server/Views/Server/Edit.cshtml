@model iConnect.Server.ViewModels.UserViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_HeaderLayout.cshtml";
}

<div class="col-lg-6">
    <div class="well">
        @using (Html.BeginForm("Edit", "Server", FormMethod.Post, new { @class = "form-horizontal" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)

            <fieldset>
                <legend>Edit User</legend>
                @Html.HiddenFor(model => model.UserId)
                <div class="form-group">

                    @Html.LabelFor(model => model.UserName, new { @class = "col-lg-2 control-label" })
                    <div class="col-lg-10">
                        @*<input type="text" class="form-control" id="UserName" name="UserName" placeholder="Email">*@
                        @Html.TextBoxFor(m => m.UserName, new { @class = "form-control formDisableBgColor", placeholder = "Middle Name", disabled=true })
                        @Html.HiddenFor(model => model.UserName)
                        @Html.ValidationMessageFor(model => model.UserName)

                    </div>
                </div>

                <div class="form-group">

                    @Html.LabelFor(model => model.FirstName, new { @class = "col-lg-2 control-label" })
                    <div class="col-lg-10">
                        @*<input type="text" class="form-control" id="FirstName" name="FirstName" placeholder="First Name">*@
                        @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", placeholder = "First Name" })
                        @Html.ValidationMessageFor(model => model.FirstName)
                    </div>
                </div>
                <div class="form-group">

                    @Html.LabelFor(model => model.MiddleName, new { @class = "col-lg-2 control-label" })
                    <div class="col-lg-10">
                        @*<input type="text" class="form-control" id="MiddleName" name="MiddleName" placeholder="Middle Name">*@
                        @Html.TextBoxFor(m => m.MiddleName, new { @class = "form-control", placeholder = "Middle Name" })
                        @Html.ValidationMessageFor(model => model.MiddleName)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.LastName, new { @class = "col-lg-2 control-label" })
                    <div class="col-lg-10">
                        @*<input type="text" class="form-control" id="LastName" name="LastName" placeholder="Last Name">*@
                        @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", placeholder = "Last Name" })
                        @Html.ValidationMessageFor(model => model.LastName)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Alias, new { @class = "col-lg-2 control-label" })
                    <div class="col-lg-10">
                        @*<input type="text" class="form-control" id="Alias" name="Alias" placeholder="Alias">*@
                        @Html.TextBoxFor(m => m.Alias, new { @class = "form-control", placeholder = "Alias" })
                        @Html.ValidationMessageFor(model => model.Alias)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.UserType, new { @class = "col-lg-2 control-label" })
                    <div class="col-lg-3">
                        @Html.DropDownListFor(m => m.UserType, Model.UserTypes, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.UserType)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.IsActive, new { @class = "col-lg-2 control-label" })
                    <div class="col-lg-3">
                        @Html.CheckBoxFor(m => m.IsActive, new { @class = "control-label activeUSer" })
                        @Html.ValidationMessageFor(model => model.IsActive)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-lg-10 col-lg-offset-2">
                        @Html.ActionLink("Back to List", "GetUserList", null, new { @class = "btn btn-default" })
                        <button type="submit" class="btn btn-primary">Submit</button>
                    </div>
                </div>
            </fieldset>
        }
    </div>
</div>





@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}